1. 1. ls -a /usr/bin
1. 2. man ls
1. 3. ls -aslh /usr/bin
1. 4. ls /usr/bin/a*
1. 5. The "." stands for the current directory and the ".." stands for the parent diectory.
1. 6. ls /usr/bin/*.py

2. 1. vi file1.txt
2. 2. i This is some text
2. 3. Esc :wq Enter

3. 1. cp file1.txt file1_copy.txt
3. 2. rm file1.txt
3. 3. ls

4. 1. cat file1_copy.txt
4. 2. cat file1_copy.txt > file1_contents.txt
4. 3. cat file1_contents.txt
4. 4. cat file1_copy.txt >> file1_contents.txt
4. 5. cat file1_contents.txt
4. 6. The output of ">" has one line and the output of ">>" has two lines. Using "A > B" overwrites B with the contents of A. Using "A >> B" appends/concatenates the contents of A onto the end of B.

5. 1. cd ~/class/ex1
5. 2. head ex1.bed; tail ex1.bed
5. 3. head -50 ex1.bed
5. 4. tail -25 ex1.bed
5. 5. more ex1.bed				# more load entire file at once
5. 6. less ex1.bed				# less is better - allows easier scrolling

6. 1. mkdir myDir
6. 2. rmdir myDir
6. 3. mkdir myDir
6. 4. cp file1_contents.txt  myDir/		# cp source dest
6. 5. rmdir myDir				# rmdir only removes empty dirs
6. 6. rm -r myDir/				# To remove full dir use rm -r (recursive)
6. 7. mkdir -p dir1/dir2			# Use -p to automatically create parent dir

7. 1. echo $PS1					# Use # for comments and to remove certain text from the beg of a str var
7. 2. ls -a					# echo displays a line of text
7. 3. vim .bashrc				# Use $var to get the variable value
7. 4. 						# [\033[38 changes the color of \u\ (the username), then @, then \h\ for 						# home, then \w\ for


8. 1. cd ~/class/ex1
8. 2. wc --chars ex1.bed
8. 3. wc --lines ex1.bed

9. 1. [200~perl -e 'foreach(1..100){print $_."\n"; print STDERR ($_ / 2)."\n"}'
9. 2. perl -e 'foreach(1..100){print $_."\n" > myOut.txt; print STDERR ($_ / 2)."\n"}' > myOut.txt
9. 3. perl -e 'foreach(1..100){print $_."\n"; print STDERR ($_ / 2)."\n"}' 2> myErr.txt
9. 4. perl -e 'foreach(1..100){print $_."\n"; print STDERR ($_ / 2)."\n"}' 1> myOut.txt 2> myErr.txt
9. 5. perl -e 'foreach(1..100){print $_."\n"; print STDERR ($_ / 2)."\n"}' &> mySeq.txt

10. 1. seq 0 .5 100 > longSeq.txt
10. 2. cat longSeq.txt | head -50 | tail -1
10. 3. tail --lines=-13 longSeq.txt
10. 4. head --lines=-13 longSeq.txt 		# head -n -13
10. 5. head -50 longSeq.txt | tail -6 | wc --chars

